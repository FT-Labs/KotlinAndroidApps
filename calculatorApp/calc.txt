    private lateinit var result: EditText
    private lateinit var newNumber: EditText
    //private var result:EditText? = null     #Another usage type
    private val displayOperation by lazy<TextView>(LazyThreadSafetyMode.NONE) {findViewById<TextView>(R.id.operation)}

    //Variables to hold operands and type of calculation
    private var operand1:Double? = null
    private var operand2:Double = 0.0
    private var pendingOperation:String = "="

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        result = findViewById(R.id.result)
        newNumber = findViewById(R.id.newNumber)

        //Data input buttons
        val button0:Button = findViewById(R.id.button0)
        val button1:Button = findViewById(R.id.button1)
        val button2:Button = findViewById(R.id.button2)
        val button3:Button = findViewById(R.id.button3)
        val button4:Button = findViewById(R.id.button4)
        val button5:Button = findViewById(R.id.button5)
        val button6:Button = findViewById(R.id.button6)
        val button7:Button = findViewById(R.id.button7)
        val button8:Button = findViewById(R.id.button8)
        val button9:Button = findViewById(R.id.button9)
        val buttonDot:Button = findViewById(R.id.buttonDot)

        //Button operations

        val buttonEquals:Button = findViewById(R.id.buttonEquals)
        val buttonDivide:Button = findViewById(R.id.buttonDivide)
        val buttonMultiply:Button = findViewById(R.id.buttonMultiply)
        val buttonMinus:Button = findViewById(R.id.buttonMinus)
        val buttonSum:Button = findViewById(R.id.buttonSum)

        val listener = View.OnClickListener{v->
            val b = v as Button
            newNumber.append(b.text)
        }

        button0.setOnClickListener(listener)
        button1.setOnClickListener(listener)
        button2.setOnClickListener(listener)
        button3.setOnClickListener(listener)
        button4.setOnClickListener(listener)
        button5.setOnClickListener(listener)
        button6.setOnClickListener(listener)
        button7.setOnClickListener(listener)
        button8.setOnClickListener(listener)
        button9.setOnClickListener(listener)
        buttonDot.setOnClickListener(listener)

        val opListener = View.OnClickListener { v ->
            val op = (v as Button).text.toString()
            val value = newNumber.text.toString()
            if(value.isNotEmpty()){
                performOperation(value, op)
            }
            /*   else if not working!!!!
            else if(newNumber.text.toString() == ""){
                displayOperation.setText("No op to calc!")
            }*/
            pendingOperation = op
            displayOperation.text = pendingOperation
        }

        buttonEquals.setOnClickListener(opListener)
        buttonSum.setOnClickListener(opListener)
        buttonMinus.setOnClickListener(opListener)
        buttonMultiply.setOnClickListener(opListener)
        buttonDivide.setOnClickListener(opListener)
    }

    private fun performOperation(value: String, op:String){
        if(operand1 == null){
            operand1 = value.toDouble()
        }else{
            operand2 = value.toDouble()
            if(pendingOperation == "="){
                pendingOperation = op
            }
            when(pendingOperation){
                "=" -> operand1 = operand2
                "/" -> if(operand2 == 0.0){
                    operand1 = Double.NaN   //handle divide by zero
                }else{
                    operand1 = operand1!! / operand2
                }
                "+" -> operand1 = operand1!! + operand2
                "-" -> operand1 = operand1!! - operand2
                "*" -> operand1 = operand1!! * operand2
            }
        }
        result.setText(operand1.toString())
        newNumber.setText("")
    }